<?php

namespace common\models;

use Yii;

/**
 * This is the model class for table "mysay".
 *
 * @property integer $id
 * @property integer $user_id
 * @property string $user_name
 * @property string $mobile
 * @property string $title
 * @property integer $level_id
 * @property string $address
 * @property integer $type
 * @property string $unit
 * @property string $question
 * @property string $reply
 * @property integer $create_time
 * @property integer $reply_time
 * @property integer $is_public
 */
class Mysay extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'mysay';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['user_id', 'user_name', 'mobile', 'title', 'level_id', 'address', 'type', 'unit', 'question', 'reply', 'create_time', 'reply_time', 'is_public'], 'required'],
            [['user_id', 'level_id', 'type', 'create_time', 'reply_time', 'is_public','address'], 'integer'],
            [['question', 'reply'], 'string'],
            [['user_name', 'mobile', 'title', 'address', 'unit'], 'string', 'max' => 255],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => '自增ID',
            'user_id' => '用户ID',
            'user_name' => '用户名称',
            'mobile' => '电话',
            'title' => '主题',
            'level_id' => '发往地',
            'address' => '事发地',
            'type' => '分类',
            'unit' => '涉及单位',
            'question' => '问题描述',
            'reply' => '回复',
            'create_time' => '创建时间',
            'reply_time' => '回复时间',
            'is_public' => '是否公开',
        ];
    }
    public function getCurrentLevel(){
        $level=MysayLevel::find()->where(['id'=>$this->level_id])->asArray()->one();
        $arr[$level['id']]=$level['name'];
        return $arr;
    }
    public function getCurrentAddress(){
        $address=MysayAddress::find()->where(['id'=>$this->address])->asArray()->one();
        $arr[$address['id']]=$address['name'];
        return $arr;
    }
    public function getCurrentType(){
        $type = MysayType::find()->where(['id'=>$this->type])->asArray()->one();
        $arr[$type['id']]=$type['name'];
        return $arr;
    }
    public function getLevel(){
        $level=$this->hasOne(MysayLevel::className(),['id'=>'level_id']);
        return $level;
    }
    public function getTypes(){
        return $this->hasOne(MysayType::className(),['id'=>'type']);
    }
    private static $public_arr=[
        0=>"不公开",
        1=>'公开'
    ];
    public static function getPublicArr(){
        return self::$public_arr;
    }
    public function beforeSave($insert)
    {
        if(!$this->isNewRecord){
            if($this->reply){
                $this->reply_time=time();
                $user_info=Yii::$app->db->createCommand("SELECT dev_type,device_token FROM gh_user WHERE id=".$this->user_id)->queryOne();
                require_once "/data/wwwroot/zb12351.com/system/rabbitmq/send.php";
                $data['title']="爱工惠";
                $data['content']="您在我有话说发表的帖子有回复了，点击查看详情";
                if($user_info['dev_type']=='android'){
                    $data['send_type'] = 3;
                }else {
                    $data['send_type'] = 4;
                }
                $data['dest'] = $user_info['device_token'];
                $data['item_type'] = "mysay";
                $data['item_id'] = $this->id;
                $data['direction'] = 'kehu';
                Yii::$app->db->createCommand()->insert('gh_sys_msg',[
                    'title'=>$data['title'],
                    'content'=>$data['content'],
                    'create_time'=>time(),
                    'user_id'=>$this->user_id,
                    'item_type'=>$data['item_type'],
                    'item_id'=>$data['item_id']
                ])->execute();
                send_data($data);
            }
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
}
